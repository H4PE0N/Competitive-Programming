{
  "allocate_array_integer":
  {
    "description": "",
    "parameters": ["int* integer", "int index", "int integer"],
    "returning": "int* array"
  },
  "generate_integer_array":
  {
    "description": "",
    "parameters": ["int length"],
    "returning": "int* array"
  },
  "integer_array_length":
  {
    "description": "",
    "parameters": ["int* array"],
    "returning": "int length"
  },
  "array_contains_integer":
  {
    "description": "",
    "parameters": ["int* array", "int length", "int integer"],
    "returning": "int boolean"
  },
  "delete_array_integer":
  {
    "description": "",
    "parameters": ["int* array", "int length", "int index"],
    "returning": "int* array"
  },
  "add_array_integer":
  {
    "description": "",
    "parameters": ["int* array", "int length", "int integer"],
    "returning": "int* array"
  },
  "sort_integer_array":
  {
    "description": "",
    "parameters": ["int* array", "int length"],
    "returning": "int* array"
  },
  "remove_array_integer":
  {
    "description": "",
    "parameters": ["int* array", "int length", "int integer"],
    "returning": "int* array"
  },
  "compare_integer_arrays":
  {
    "description": "",
    "parameters": ["int* first", "int* second", "int length"],
    "returning": "int boolean"
  },
  "remove_array_integers":
  {
    "description": "",
    "parameters": ["int* array", "int length", "int integer"],
    "returning": "int* array"
  },
  "array_integer_amount":
  {
    "description": "",
    "parameters": ["int* array", "int length", "int integer"],
    "returning": "int amount"
  },
  "integers_range_between":
  {
    "description": "",
    "parameters": ["int* array", "int minimum", "int maximum"],
    "returning": "int boolean"
  },
  "generate_random_array":
  {
    "description": "",
    "parameters": ["int length", "int minimum", "int maximum"],
    "returning": "int* array"
  },
  "reverse_integer_array":
  {
    "description": "",
    "parameters": ["int* array", "int length"],
    "returning": "int* reverse"
  },
  "add_array_integers":
  {
    "description": "",
    "parameters": ["int* array", "int length", "int integer", "int amount"],
    "returning": "int* array"
  },
  "integer_array_stdout":
  {
    "description": "",
    "parameters": ["int* array", "int length"],
    "returning": "void"
  },
  "compare_array_content":
  {
    "description": "",
    "parameters": ["int* first", "int* second", "int length"],
    "returning": "int boolean"
  },
  "duplicate_integer_array":
  {
    "description": "",
    "parameters": ["int* array", "int length"],
    "returning": "int* doublet"
  },
  "array_index_integer":
  {
    "description": "",
    "parameters": ["int* array", "int index"],
    "returning": "int integer"
  },
  "shuffle_integer_array":
  {
    "description": "",
    "parameters": ["int* array", "int length"],
    "returning": "int* array"
  },
  "generate_integer_vector":
  {
    "description": "",
    "parameters": ["int first", "int second"],
    "returning": "int* vector"
  },
  "integer_array_total":
  {
    "description": "",
    "parameters": ["int* array", "int length"],
    "returning": "int total"
  },
  "integer_array_section":
  {
    "description": "",
    "parameters": ["int* array", "int first", "int second"],
    "returning": "int* section"
  },
  "array_integer_index":
  {
    "description": "",
    "parameters": ["int* array", "int length", "int integer"],
    "returning": "int index"
  },
  "integers_inside_array":
  {
    "description": "",
    "parameters": ["int* array", "int length", "int* integers"],
    "returning": "int boolean"
  },
  "generate_integer_matrix":
  {
    "description": "",
    "parameters": ["int height", "int width"],
    "returning": "int** matrix"
  },
  "allocate_matrix_integer":
  {
    "description": "",
    "parameters": ["int** matrix", "int height", "int width", "int integer"],
    "returning": "int** matrix"
  },
  "delete_matrix_integer":
  {
    "description": "",
    "parameters": ["int** matrix", "int height", "int width"],
    "returning": "int** matrix"
  },
  "integer_matrix_height":
  {
    "description": "",
    "parameters": ["int** matrix", "int width"],
    "returning": "int height"
  },
  "matrix_contains_integer":
  {
    "description": "",
    "parameters": ["int** matrix", "int height", "int width", "int integer"],
    "returning": "int boolean"
  },
  "matrix_array_contains":
  {
    "description": "",
    "parameters": ["int** matrix", "int index", "int integer"],
    "returning": "int boolean"
  },
  "remove_matrix_integer":
  {
    "description": "",
    "parameters": ["int** matrix", "int height", "int integer"],
    "returning": "int** matrix"
  },
  "add_matrix_integer":
  {
    "description": "",
    "parameters": ["int** matrix", "int height", "int integer"],
    "returning": "int** matrix"
  },
  "remove_matrix_array":
  {
    "description": "",
    "parameters": ["int** matrix", "int height", "int* array"],
    "returning": "int** matrix"
  },
  "add_matrix_array":
  {
    "description": "",
    "parameters": ["int** matrix", "int height", "int* array"],
    "returning": "int** matrix"
  },
  "generate_random_matrix":
  {
    "description": "",
    "parameters": ["int height", "int width", "int minimum", "int maximum"],
    "returning": "int** matrix"
  },
  "integer_matrix_stdout":
  {
    "description": "",
    "parameters": ["int** matrix", "int height", "width"],
    "returning": "void"
  },
  "shuffle_matrix_arrays":
  {
    "description": "",
    "parameters": ["int** matrix", "int height"],
    "returning": "int** matrix"
  },
  "duplicate_integer_matrix":
  {
    "description": "",
    "parameters": ["int** matrix", "int height", "int widdth"],
    "returning": "int** doublet"
  },
  "remove_matrix_integers":
  {
    "description": "",
    "parameters": ["int** matrix", "int height", "int integer"],
    "returning": "int** matrix"
  },
  "matrix_array_index":
  {
    "description": "",
    "parameters": ["int** matrix", "int height", "int* array"],
    "returning": "int index"
  },
  "sort_matrix_arrays":
  {
    "description": "",
    "parameters": ["int** matrix", "int height"],
    "returning": "int** matrix"
  },
  "matrix_index_array":
  {
    "description": "",
    "parameters": ["int** matrix", "int index"],
    "returning": "int* array"
  },
  "compare_matrix_content":
  {
    "description": "",
    "parameters": ["int** first", "int** second", "int height", "int width"],
    "returning": "int boolean"
  },
  "matrix_array_length":
  {
    "description": "",
    "parameters": ["int** matrix", "int index"],
    "returning": "int length"
  },
  "compare_integer_matrix":
  {
    "description": "",
    "parameters": ["int** first", "int** second", "int height", "int width"],
    "returning": "int boolean"
  },
  "allocate_matrix_array":
  {
    "description": "",
    "parameters": ["int** matrix", "int index", "int* array"],
    "returning": "int** matrix"
  },
  "delete_matrix_array":
  {
    "description": "",
    "parameters": ["int** matrix", "int height", "int index"],
    "returning": "int** matrix"
  },
  "matrix_array_total":
  {
    "description": "",
    "parameters": ["int** matrix", "int index"],
    "returning": "int total"
  },
  "shuffle_integer_matrix":
  {
    "description": "",
    "parameters": ["int** matrix", "int height"],
    "returning": "int** matrix"
  },
  "reverse_integer_matrix":
  {
    "description": "",
    "parameters": ["int** matrix", "int height", "int width"],
    "returning": "int** reverse"
  },
  "reverse_matrix_arrays":
  {
    "description": "",
    "parameters": ["int** matrix", "int height"],
    "returning": "int** reverse"
  },
  "sort_integer_matrix":
  {
    "description": "",
    "parameters": ["int** matrix", "int height"],
    "returning": "int** matrix"
  },
  "matrix_array_integer":
  {
    "description": "",
    "parameters": ["int** matrix", "int height", "int width"],
    "returning": "int integer"
  },
  "hashmap_keyword_exists":
  {
    "description": "",
    "parameters": ["int** hashmpa", "int keyword"],
    "returning": "int boolean"
  },
  "integer_hashmap_length":
  {
    "description": "",
    "parameters": ["int** hashmap"],
    "returning": "int length"
  },
  "hashmap_keyword_index":
  {
    "description": "",
    "parameters": ["int** hashmap", "int keyword"],
    "returning": "int index"
  },
  "increase_hashmap_value":
  {
    "description": "",
    "parameters": ["int** hashmap", "int keyword"],
    "returning": "int** hashmap"
  },
  "allocate_keyword_value":
  {
    "description": "",
    "parameters": ["int** hashmap", "int keyword", "int value"],
    "returning": "int** hashmap"
  },
  "convert_array_hashmap":
  {
    "description": "",
    "parameters": ["int* array", "int length"],
    "returning": "int** hashmap"
  },
  "convert_hashmap_array":
  {
    "description": "",
    "parameters": ["int** hashmap", "int length"],
    "returning": "int* array"
  },
  "allocate_hashmap_keyword":
  {
    "description": "",
    "parameters": ["int** hashmap", "int index", "int keyword"],
    "returning": "int** hashmap"
  },
  "integer_hashmap_keywords":
  {
    "description": "",
    "parameters": ["int** hashmap", "int value"],
    "returning": "int* keywords"
  },
  "delete_hashmap_keyword":
  {
    "description": "",
    "parameters": ["int** hashmap", "int length", "int index"],
    "returning": "int** hashmap"
  },
  "integer_hashmap_stdout":
  {
    "description": "",
    "parameters": ["int** hashmap", "int length"],
    "returning": "void"
  },
  "generate_random_hashmap":
  {
    "description": "",
    "parameters": ["int length", "int minimum", "int maximum"],
    "returning": "int** hashmap"
  },
  "hashmap_index_value":
  {
    "description": "",
    "parameters": ["int** hashmap", "int index"],
    "returning": "int value"
  },
  "hashmap_index_keyword":
  {
    "description": "",
    "parameters": ["int** hashmap", "int index"],
    "returning": "int keyword"
  },
  "integer_hashmap_total":
  {
    "description": "",
    "parameters": ["int** hashmap", "int length"],
    "returning": "int total"
  },
  "hashmap_keyword_array":
  {
    "description": "",
    "parameters": ["int** hashmap", "int length"],
    "returning": "int* array"
  },
  "allocate_index_value":
  {
    "description": "",
    "parameters": ["int** hashmap", "int index", "int value"],
    "returning": "int** hashmap"
  },
  "compare_integer_hashmaps":
  {
    "description": "",
    "parameters": ["int** first", "int** second", "int length"],
    "returning": "int boolean"
  },
  "sort_integer_hashmap":
  {
    "description": "",
    "parameters": ["int** hashmap", "int length"],
    "returning": "int** hashmap"
  },
  "compare_hashmap_content":
  {
    "description": "",
    "parameters": ["int** first", "int** second", "int length"],
    "returning": "int boolean"
  },
  "generate_integer_hashmap":
  {
    "description": "",
    "parameters": ["int length"],
    "returning": "int** hashmap"
  },
  "hashmap_keyword_value":
  {
    "description": "",
    "parameters": ["int** hashmap", "int keyword"],
    "returning": "int value"
  },
  "duplicate_integer_hashmap":
  {
    "description": "",
    "parameters": ["int** hashmap", "int length"],
    "returning": "int** doublet"
  },
  "remove_hashmap_keyword":
  {
    "description": "",
    "parameters": ["int** hashmap", "int length", "int keyword"],
    "returning": "int** hashmap"
  },
  "allocate_hashmap_value":
  {
    "description": "",
    "parameters": ["int** hashmap", "int index", "int value"],
    "returning": "int** hashmap"
  },
  "increase_index_value":
  {
    "description": "",
    "parameters": ["int** hashmap", "int index"],
    "returning": "int** hashmap"
  },
  "reduce_index_value":
  {
    "description": "",
    "parameters": ["int** hashmap", "int length", "int index"],
    "returning": "int** hashmap"
  },
  "generate_character_string":
  {
    "description": "",
    "parameters": ["int length"],
    "returning": "char* string"
  },
  "character_string_length":
  {
    "description": "",
    "parameters": ["char* string"],
    "returning": "int length"
  },
  "string_contains_character":
  {
    "description": "",
    "parameters": ["char* string", "int length", "char character"],
    "returning": "int boolean"
  },
  "allocate_string_character":
  {
    "description": "",
    "parameters": ["char* string", "int index", "char character"],
    "returning": "char* string"
  },
  "remove_string_character":
  {
    "description": "",
    "parameters": ["char* string", "int length", "char character"],
    "returning": "char* string"
  },
  "add_string_character":
  {
    "description": "",
    "parameters": ["char* string", "int length", "char character"],
    "returning": "char* string"
  },
  "lower_alphabet_character":
  {
    "description": "",
    "parameters": ["int index"],
    "returning": "char character"
  },
  "add_string_characters":
  {
    "description": "",
    "parameters": ["char* string", "int length", "char character", "int amount"],
    "returning": "char* string"
  },
  "character_variable_greater":
  {
    "description": "",
    "parameters": ["char first", "char second"],
    "returning": "int boolean"
  },
  "generate_random_character":
  {
    "description": "",
    "parameters": ["int minimum", "int maximum"],
    "returning": "char character"
  },
  "character_range_between":
  {
    "description": "",
    "parameters": ["char character", "int minimum", "int maximum"],
    "returning": "int boolean"
  },
  "remove_string_characters":
  {
    "description": "",
    "parameters": ["char* string", "int length", "char character"],
    "returning": "char* string"
  },
  "generate_random_string":
  {
    "description": "",
    "parameters": ["int length", "int minimum", "int maximum"],
    "returning": "char* string"
  },
  "character_string_stdout":
  {
    "description": "",
    "parameters": ["char* string", "int length"],
    "returning": "void"
  },
  "shuffle_character_string":
  {
    "description": "",
    "parameters": ["char* string", "int length"],
    "returning": "char* string"
  },
  "duplicate_character_string":
  {
    "description": "",
    "parameters": ["char* string", "int length"],
    "returning": "char* doublet"
  },
  "character_string_section":
  {
    "description": "",
    "parameters": ["char* string", "int first", "int second"],
    "returning": "char* section"
  },
  "sort_character_string":
  {
    "description": "",
    "parameters": ["char* string", "int length"],
    "returning": "char* string"
  },
  "compare_string_content":
  {
    "description": "",
    "parameters": ["char* first", "char* second", "int length"],
    "returning": "int boolean"
  },
  "string_index_character":
  {
    "description": "",
    "parameters": ["char* string", "int index"],
    "returning": "char character"
  },
  "character_variable_smaller":
  {
    "description": "",
    "parameters": ["char first", "char second"],
    "returning": "int boolean"
  },
  "generate_higher_alphabet":
  {
    "description": "",
    "parameters": ["int characters"],
    "returning": "char* alphabet"
  },
  "higher_alphabet_character":
  {
    "description": "",
    "parameters": ["int index"],
    "returning": "char character"
  },
  "compare_character_strings":
  {
    "description": "",
    "parameters": ["char* first", "char* second", "int length"],
    "returning": "int boolean"
  },
  "generate_lower_alphabet":
  {
    "description": "",
    "parameters": ["int characters"],
    "returning": "char* alphabet"
  },
  "compare_character_variables":
  {
    "description": "",
    "parameters": ["char first", "char second"],
    "returning": "int boolean"
  },
  "delete_string_character":
  {
    "description": "",
    "parameters": ["char* string", "int length", "int index"],
    "returning": "char* string"
  },
  "reverse_character_string":
  {
    "description": "",
    "parameters": ["char* string", "int length"],
    "returning": "char* reverse"
  },
  "string_character_index":
  {
    "description": "",
    "parameters": ["char* string", "int length", "char character"],
    "returning": "int index"
  },
  "characters_inside_string":
  {
    "description": "",
    "parameters": ["char* string", "int length", "char* characters"],
    "returning": "int boolean"
  },
  "convert_integer_binary":
  {
    "description": "",
    "parameters": ["int integer"],
    "returning": "char* binary"
  },
  "convert_character_binary":
  {
    "description": "",
    "parameters": ["char character"],
    "returning": "char* binary"
  },
  "convert_array_binary":
  {
    "description": "",
    "parameters": ["int* array", "int length"],
    "returning": "char** binary"
  },
  "convert_binary_array":
  {
    "description": "",
    "parameters": ["char** binary", "int length"],
    "returning": "int* array"
  },
  "convert_binary_integer":
  {
    "description": "",
    "parameters": ["char* binary"],
    "returning": "int integer"
  },
  "convert_binary_character":
  {
    "description": "",
    "parameters": ["char* binary"],
    "returning": "char character"
  },
  "generate_random_binary":
  {
    "description": "",
    "parameters": ["int minimum", "int maximum"],
    "returning": "char* binary"
  },
  "convert_string_binary":
  {
    "description": "",
    "parameters": ["char* string", "int length"],
    "returning": "char** binary"
  },
  "convert_binary_string":
  {
    "description": "",
    "parameters": ["char** binary", "int length"],
    "returning": "char* string"
  },
  "integer_array_average":
  {
    "description": "",
    "parameters": ["int* array", "int length"],
    "returning": "double average"
  },
  "array_integer_frequency":
  {
    "description": "",
    "parameters": ["int* array", "int length", "int integer"],
    "returning": "double frequency"
  },
  "integer_array_median":
  {
    "description": "",
    "parameters": ["int* array", "int length"],
    "returning": "double median"
  },
  "integer_array_typical":
  {
    "description": "",
    "parameters": ["int* array", "int length"],
    "returning": "int typical"
  },
  "array_integers_sequences":
  {
    "description": "",
    "parameters": ["int* array", "int length"],
    "returning": "int sequences"
  },
  "array_integer_percent":
  {
    "description": "",
    "parameters": ["int* array", "int length", "int integer"],
    "returning": "double percent"
  },
  "binary_and_operation":
  {
    "description": "",
    "parameters": ["char* first", "char* second", "int length"],
    "returning": "char* binary"
  },
  "binary_left_shifting":
  {
    "description": "",
    "parameters": ["char* binary", "int length"],
    "returning": "char* shifted"
  },
  "binary_or_operation":
  {
    "description": "",
    "parameters": ["char* first", "char* second", "int length"],
    "returning": "char* binary"
  },
  "binary_right_shifting":
  {
    "description": "",
    "parameters": ["char* binary", "int length"],
    "returning": "char* shifted"
  },
  "binary_xor_operation":
  {
    "description": "",
    "parameters": ["char* first", "char* second", "int length"],
    "returning": "char* binary"
  },
  "binary_not_operation":
  {
    "description": "",
    "parameters": ["char* binary", "int length"],
    "returning": "char* opposite"
  },
  "greatest_common_table":
  {
    "description": "",
    "parameters": ["int greater", "int smaller"],
    "returning": "int table"
  },
  "integer_range_between":
  {
    "description": "",
    "parameters": ["int integer", "int minimum", "maximum"],
    "returning": "int boolean"
  },
  "convert_decimal_percent":
  {
    "description": "",
    "parameters": ["double decimal"],
    "returning": "double percent"
  },
  "increase_integer_variable":
  {
    "description": "",
    "parameters": ["int variable", "int integer"],
    "returning": "int variable"
  },
  "smallest_fraction_form":
  {
    "description": "",
    "parameters": ["int* fraction"],
    "returning": "int* fraction"
  },
  "integer_power_operation":
  {
    "description": "",
    "parameters": ["int base", "int exponent"],
    "returning": "int product"
  },
  "fraction_variable_smaller":
  {
    "description": "",
    "parameters": ["int* first", "int* second"],
    "returning": "int boolean"
  },
  "compare_integer_variables":
  {
    "description": "",
    "parameters": ["int first", "int second"],
    "returning": "int boolean"
  },
  "generate_random_fraction":
  {
    "description": "",
    "parameters": ["double minimum", "double maximum"],
    "returning": "int* fraction"
  },
  "integer_variable_smaller":
  {
    "description": "",
    "parameters": ["int first", "int second"],
    "returning": "int boolean"
  },
  "least_common_denominator":
  {
    "description": "",
    "parameters": ["int* first", "int* second"],
    "returning": "int denominator"
  },
  "integer_between_integers":
  {
    "description": "",
    "parameters": ["int first", "int second"],
    "returning": "double integer"
  },
  "convert_percent_decimal":
  {
    "description": "",
    "parameters": ["double percent"],
    "returning": "double decimal"
  },
  "integer_variable_greater":
  {
    "description": "",
    "parameters": ["int first", "int second"],
    "returning": "int boolean"
  },
  "fraction_variable_stdout":
  {
    "description": "",
    "parameters": ["int* fraction"],
    "returning": "void"
  },
  "convert_decimal_fraction":
  {
    "description": "",
    "parameters": ["double decimal"],
    "returning": "int* fraction"
  },
  "generate_fraction_variable":
  {
    "description": "",
    "parameters": ["int numerator", "int denominator"],
    "returning": "int* fraction"
  },
  "convert_fraction_decimal":
  {
    "description": "",
    "parameters": ["int* fraction"],
    "returning": "double decimal"
  },
  "check_integer_divisible":
  {
    "description": "",
    "parameters": ["int first", "int second"],
    "returning": "int boolean"
  },
  "convert_percent_fraction":
  {
    "description": "",
    "parameters": ["double percent"],
    "returning": "int* fraction"
  },
  "decimal_variable_smaller":
  {
    "description": "",
    "parameters": ["double first", "double second"],
    "returning": "int boolean"
  },
  "compare_fraction_variables":
  {
    "description": "",
    "parameters": ["int* first", "int* second"],
    "returning": "int boolean"
  },
  "fraction_variable_denominator":
  {
    "description": "",
    "parameters": ["int* fraction"],
    "returning": "int denominator"
  },
  "inverted_fraction_variable":
  {
    "description": "",
    "parameters": ["int* fraction"],
    "returning": "int* inverted"
  },
  "generate_integer_products":
  {
    "description": "",
    "parameters": ["int integer", "int amount"],
    "returning": "int* products"
  },
  "extend_fraction_variable":
  {
    "description": "",
    "parameters": ["int* fraction", "int integer"],
    "returning": "int* fraction"
  },
  "convert_fraction_percent":
  {
    "description": "",
    "parameters": ["int* fraction"],
    "returning": "double percent"
  },
  "fraction_variable_numerator":
  {
    "description": "",
    "parameters": ["int* fraction"],
    "returning": "int numerator"
  },
  "generate_random_integer":
  {
    "description": "",
    "parameters": ["int minimum", "int maximum"],
    "returning": "int integer"
  },
  "shorten_fraction_variable":
  {
    "description": "",
    "parameters": ["int* fraction", "int integer"],
    "returning": "int* fraction"
  },
  "compare_decimal_variables":
  {
    "description": "",
    "parameters": ["double first", "double second"],
    "returning": "int boolean"
  },
  "decimal_variable_greater":
  {
    "description": "",
    "parameters": ["double first", "double second"],
    "returning": "int boolean"
  },
  "fraction_variable_greater":
  {
    "description": "",
    "parameters": ["int* first", "int* second"],
    "returning": "int boolean"
  },
  "duplicate_fraction_variable":
  {
    "description": "",
    "parameters": ["int* fraction"],
    "returning": "int* doublet"
  },
  "generate_random_decimal":
  {
    "description": "",
    "parameters": ["double minimum", "double maximum"],
    "returning": "double decimal"
  },
  "start_stopwatch_operation":
  {
    "description": "",
    "parameters": [],
    "returning": "long time"
  },
  "stop_stopwatch_operation":
  {
    "description": "",
    "parameters": ["long start_time"],
    "returning": "int difference"
  },
  "seconds_delay_operation":
  {
    "description": "",
    "parameters": ["int seconds"],
    "returning": "void"
  },
  "calculate_current_time":
  {
    "description": "",
    "parameters": [],
    "returning": "long time"
  },
  "":
  {
    "description": "",
    "parameters": [""],
    "returning": ""
  },
  "":
  {
    "description": "",
    "parameters": [""],
    "returning": ""
  },
  "":
  {
    "description": "",
    "parameters": [""],
    "returning": ""
  },
  "":
  {
    "description": "",
    "parameters": [""],
    "returning": ""
  },
  "":
  {
    "description": "",
    "parameters": [""],
    "returning": ""
  },
  "":
  {
    "description": "",
    "parameters": [""],
    "returning": ""
  },
  "":
  {
    "description": "",
    "parameters": [""],
    "returning": ""
  },
  "":
  {
    "description": "",
    "parameters": [""],
    "returning": ""
  },
  "":
  {
    "description": "",
    "parameters": [""],
    "returning": ""
  },
  "":
  {
    "description": "",
    "parameters": [""],
    "returning": ""
  },
  "":
  {
    "description": "",
    "parameters": [""],
    "returning": ""
  },
  "":
  {
    "description": "",
    "parameters": [""],
    "returning": ""
  },
  "":
  {
    "description": "",
    "parameters": [""],
    "returning": ""
  },
  "":
  {
    "description": "",
    "parameters": [""],
    "returning": ""
  },
  "":
  {
    "description": "",
    "parameters": [""],
    "returning": ""
  },
  "":
  {
    "description": "",
    "parameters": [""],
    "returning": ""
  },
  "":
  {
    "description": "",
    "parameters": [""],
    "returning": ""
  },
  "":
  {
    "description": "",
    "parameters": [""],
    "returning": ""
  },
  "":
  {
    "description": "",
    "parameters": [""],
    "returning": ""
  },
  "":
  {
    "description": "",
    "parameters": [""],
    "returning": ""
  },
  "":
  {
    "description": "",
    "parameters": [""],
    "returning": ""
  }
}
